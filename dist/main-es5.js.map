{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/constantsKeys.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","COLLECTION_NAME","ApiService","firestore","data","reject","collection","add","res","err","valueChanges","idField","user","dataToUpdate","doc","set","merge","payload","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","COLORS","HomeComponent","apiService","fb","last_color","getData","form","group","taskIdToAdd","getUsers","subscribe","console","log","users","name","filter","item","toLowerCase","includes","tasks","tasksShow","i","Object","entries","length","push","taskId","interruptions","newTaskId","String","value","addTask","reset","newTasksToAdd","Date","updateUser","option","Math","floor","random","color","getUsersByName","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\nconst COLLECTION_NAME = \"users\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n\r\nexport class ApiService {\r\n\r\n  constructor(private firestore: AngularFirestore) { }\r\n\r\n  createUser(data) {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.firestore\r\n        .collection(COLLECTION_NAME)\r\n        .add(data)\r\n        .then(res => { }, err => reject(err));\r\n    });\r\n  }\r\n\r\n  getUsers() {\r\n    return this.firestore.collection(COLLECTION_NAME).valueChanges({ idField: 'id' });\r\n  }\r\n\r\n\r\n  updateUser(user: any, dataToUpdate: any) {\r\n    return this.firestore\r\n      .collection(COLLECTION_NAME)\r\n      .doc(user.id)\r\n      .set(dataToUpdate, { merge: true });\r\n  }\r\n\r\n  deleteUser(data) {\r\n    return this.firestore\r\n      .collection(COLLECTION_NAME)\r\n      .doc(data.payload.doc.id)\r\n      .delete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-example';\n}\n","<mat-toolbar color=\"primary\">\r\n  <h1>\r\n    Workout Analytics\r\n  </h1>\r\n  <button mat-button routerLink=\"/\"></button>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport { environment } from \"src/environments/environment\";\nimport { ApiService } from './api.service';\n\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatInputModule,\n    FormsModule,\n    MatGridListModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../api.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { reduce, count } from 'rxjs/operators';\r\nimport { stringify } from 'querystring';\r\nimport { keyframes } from '@angular/animations';\r\n\r\nconst COLORS = ['rgb(226,0,60,0.6)',\r\n  'rgb(30,200,255,0.6)',\r\n  'rgb(0,255,0,0.6)',\r\n  'rgb(255,255,0,0.6)'\r\n];\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  form: FormGroup\r\n\r\n  users: any;\r\n\r\n  last_color = 0;\r\n\r\n  constructor(private apiService: ApiService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n\r\n    this.form = this.fb.group({\r\n      user: [''],\r\n      taskIdToAdd: ['']\r\n    })\r\n  }\r\n\r\n  getData() {\r\n\r\n    // this.users = this.apiService.getUsers();\r\n\r\n    this.apiService.getUsers().subscribe((data: any[]) => {\r\n      console.log(data);\r\n      this.users = data;\r\n    });\r\n  }\r\n\r\n  getUsersByName(name: string) {\r\n    if (name == '') {\r\n      this.getData();\r\n    } else {\r\n      this.users = this.users.filter(item => item.name.toLowerCase().includes(name.toLowerCase()));\r\n    }\r\n  }\r\n\r\n\r\n  getTareas(user: any) {\r\n\r\n    if (!user.tasks) {\r\n      return \"\";\r\n    }\r\n\r\n    let tasksShow = [];\r\n\r\n    let tasks = user.tasks;\r\n    for (let i = 0; i < Object.entries(tasks).length; i++) {\r\n      tasksShow.push(tasks[i].taskId);\r\n    }\r\n\r\n    return tasksShow;\r\n  }\r\n\r\n\r\n\r\n  getInterruptions(user: any) {\r\n\r\n    if (!user.interruptions) {\r\n      return \"\";\r\n    }\r\n\r\n    return user.interruptions;\r\n  }\r\n\r\n\r\n\r\n  addNewTask(user: any) {\r\n\r\n    let newTaskId = String(this.form.value.taskIdToAdd);\r\n    if (this.form.value.taskIdToAdd) {\r\n      this.addTask(user, newTaskId);\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  addTask(user: any, newTaskId: string) {\r\n    let tasks = [];\r\n    if (user.tasks) {\r\n      tasks = user.tasks;\r\n    }\r\n    let newTasksToAdd = {\r\n      \"taskId\": newTaskId,\r\n      \"date\": new Date()\r\n    };\r\n    tasks.push(newTasksToAdd);\r\n    this.apiService.updateUser(user, { \"tasks\": tasks });\r\n  }\r\n\r\n\r\n\r\n  addInterrupt(user: any) {\r\n\r\n    user.interruptions.push(new Date());\r\n\r\n\r\n    this.apiService.updateUser(user, { \"interruptions\": user.interruptions });\r\n  }\r\n\r\n  getRandomColor(user) {\r\n    let option = (Math.floor(Math.random() * 100)) % 6;\r\n\r\n    if (this.last_color == COLORS.length) {\r\n      this.last_color = 0;\r\n    }\r\n    if (!user.color) {\r\n      user.color = COLORS[this.last_color++];\r\n    }\r\n    return user.color;\r\n  }\r\n}\r\n","<div style=\"position: absolute;top: 10px;right: 10px;\">\r\n  <mat-form-field class=\"user_top_filter\">\r\n    <mat-label>Usuario</mat-label>\r\n    <input #userFiltered matInput placeholder=\"Usuario\" (input)=\"getUsersByName(userFiltered.value)\" value=\"\"\r\n      autocomplete=\"off\">\r\n  </mat-form-field>\r\n</div>\r\n\r\n<mat-grid-list cols=\"3\" rowHeight=\"2:1\">\r\n  <div style=\"\">\r\n    <!-- <mat-spinner *ngIf=\"users.length === 0\"></mat-spinner> -->\r\n\r\n    <form [formGroup]=\"form\" novalidate autocomplete=\"off\">\r\n      <mat-grid-tile *ngFor=\"let user of users;let i = index\" class=\"mat_grid_title\">\r\n\r\n        <mat-card [ngStyle]=\"{'background-color': getRandomColor(user)}\" style=\"width: 100%;height: 100%;\">\r\n          <mat-card-header style=\"display: block;\">\r\n            <div class=\"row\" style=\"display: inline;width: 100%;\">\r\n              <div style=\"float: left;\">\r\n                <mat-card-title>{{ user.name }}</mat-card-title>\r\n              </div>\r\n              <div style=\"float: right;padding-right: 10px;\" class=\"\">\r\n                <button mat-mini-fab color=\"primary\" matTooltip=\"Show graphics\" aria-label=\"\">\r\n                  <mat-icon>poll</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </mat-card-header>\r\n          <mat-card-content style=\"overflow: hidden; margin: 0px;\">\r\n            <div class=\"row\" style=\"display: inline;\">\r\n              <div class=\"column col-sm-6\" style=\"float: left;\">\r\n                <p style=\"\">Peticiones Reabiertas: {{ user.tasks?user.tasks.length:0 }}</p>\r\n                <p style=\"\">Interrupciones: {{ user.interruptions?user.interruptions.length:0 }}</p>\r\n                <!-- <p style=\"margin: 0px;\">Interrupciones: <span style=\"margin: 0px;\"\r\n                *ngFor=\"let interruption of getInterruptions(user)\">{{interruption}}, </span></p>\r\n            <p style=\"margin: 0px;\">Tareas:\r\n              <span style=\"margin: 0px;\" *ngFor=\"let tarea of getTareas(user)\">{{tarea}}, </span></p> -->\r\n              </div>\r\n              <div class=\"column\" style=\"float: right;margin-right: 20px;\">\r\n                <div class=\"row\">\r\n                  <button mat-raised-button (click)=\"addTask(user,'0')\" class=\"mat_raised_button\">+1 Reabierta</button>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <button mat-raised-button (click)=\"addInterrupt(user)\" class=\"mat_raised_button\">+1\r\n                    Interrupción</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n\r\n          <!-- <mat-card-actions class=\"form-inline\"> -->\r\n          <div style=\"padding: 5px;\">\r\n            <mat-form-field appearance=\"outline\" class=\"mat_form_field_task\">\r\n              <mat-label>ID Tarea</mat-label>\r\n              <input matInput type=\"text\" value=\"\" formControlName=\"taskIdToAdd\" style=\"\" />\r\n            </mat-form-field>\r\n            <button mat-raised-button type=\"submit\" (click)=\"addNewTask(user)\">Añadir</button>\r\n          </div>\r\n          <!-- </mat-card-actions> -->\r\n        </mat-card>\r\n\r\n      </mat-grid-tile>\r\n    </form>\r\n  </div>\r\n</mat-grid-list>","export const FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyA1hzqf2ECw2z4xrxFMmzuE5obcoTlUexo\",\r\n    authDomain: \"workout-analytics-3b7d7.firebaseapp.com\",\r\n    databaseURL: \"https://workout-analytics-3b7d7.firebaseio.com\",\r\n    projectId: \"workout-analytics-3b7d7\",\r\n    storageBucket: \"workout-analytics-3b7d7.appspot.com\",\r\n    messagingSenderId: \"936763432487\",\r\n    appId: \"1:936763432487:web:84f9b339ea2ef9e3047802\"\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport { FIREBASE_CONFIG } from \"src/environments/constantsKeys\"\n\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: FIREBASE_CONFIG.apiKey,\n    authDomain: FIREBASE_CONFIG.authDomain,\n    databaseURL: FIREBASE_CONFIG.databaseURL,\n    projectId: FIREBASE_CONFIG.projectId,\n    storageBucket: FIREBASE_CONFIG.storageBucket,\n    messagingSenderId: FIREBASE_CONFIG.messagingSenderId,\n    appId: FIREBASE_CONFIG.appId\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}